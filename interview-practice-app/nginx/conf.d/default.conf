# 小学生面接練習アプリ - Nginx設定

# HTTPからHTTPSへのリダイレクト
server {
    listen 80;
    listen [::]:80;
    server_name _;

    # Let's Encrypt用
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # その他のHTTPアクセスをHTTPSへリダイレクト
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS メインサーバー
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name meiwa-interview.example.com;  # 実際のドメインに変更

    # SSL証明書
    ssl_certificate /etc/letsencrypt/live/meiwa-interview.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/meiwa-interview.example.com/privkey.pem;

    # セキュリティヘッダー
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com https://accounts.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.openai.com https://api.anthropic.com https://generativelanguage.googleapis.com; media-src 'self' blob:; frame-src 'self' https://accounts.google.com;" always;

    # 静的ファイルキャッシュ
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://nextjs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }

    # API エンドポイント
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://nextjs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # タイムアウト設定
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # バッファリング無効化（リアルタイム通信用）
        proxy_buffering off;
        proxy_cache off;
    }

    # 認証エンドポイント
    location /api/auth/ {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://nextjs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # アップロードエンドポイント
    location /api/upload/ {
        client_max_body_size 50M;
        client_body_timeout 60s;
        
        proxy_pass http://nextjs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_request_buffering off;
        proxy_read_timeout 300s;
    }

    # WebSocket接続（リアルタイム機能用）
    location /socket.io/ {
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }

    # Next.js アプリケーション
    location / {
        proxy_pass http://nextjs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Next.js用ヘッダー
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # タイムアウト設定
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # エラーページ
        error_page 502 503 504 /maintenance.html;
    }

    # メンテナンスページ
    location = /maintenance.html {
        root /usr/share/nginx/html;
        internal;
    }

    # ヘルスチェック
    location /health {
        access_log off;
        proxy_pass http://nextjs_backend/api/health;
        proxy_set_header Host $host;
    }

    # ロボット制御
    location = /robots.txt {
        proxy_pass http://nextjs_backend;
        proxy_set_header Host $host;
        expires 1d;
    }

    # サイトマップ
    location = /sitemap.xml {
        proxy_pass http://nextjs_backend;
        proxy_set_header Host $host;
        expires 1d;
    }
}